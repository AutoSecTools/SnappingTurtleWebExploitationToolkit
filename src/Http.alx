#'HttpRequestTemplate';
#'HttpFile';
#'RedirectHandler';
#'MultipartFormData';
from('urlparse', 'parse_qs');

class ExploitComponent Http {
    contentType = 'Content-Type',
    contentLength = 'Content-Length',
    dataName = 'name',
    dataFilename = 'filename',
    dataType = 'type',
    data = 'data',
    
    static request: @(url, postData = null, fileData = null) {
        print('[?] %s' % url);        
        if (postData != null) print('    ' + str(postData));
        
        if (fileData != null) {
            tup = fileData
                @select(@(x) '{{ {}, {}, {} }}'.format(
                    x.name,
                    x.filename,
                    x.type))
                @join(', ');
                
            print('    ' + tup);
        }
        
        if (fileData == null) {
            ret urllib2.urlopen(url, postData).read();
        } else {
            formData = Http.createFormData(postData, fileData);
            body = str(formData);
            req = urllib2.Request(url);
            req.add_header(Http.contentType, formData.getContentType());
            req.add_header(Http.contentLength, str(len(body)));
            req.add_data(body);        
            ret urllib2.urlopen(req).read();
        }
    },
    
    static createFormData: @(postData = null, fileData = null) {
        formData = MultipartFormData();
            
        if (postData != null) {
            postValues = parse_qs(postData);
            
            for (k in postValues.keys()) {
                for (v in postValues[k]) {
                    formData.addData(k, v);
                }
            }
        }

        if (fileData != null) {
            for (f in fileData) {
                formData.addFileData(
                    f.name,
                    f.filename,
                    f.type,
                    f.data);
            }
        }
        
        ret formData;
    },
};