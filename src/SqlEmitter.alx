class SqlEmitter {    
    alpha: CharRange.alpha(),
    
    getChars: @()
        range(0x20, 0x80)
        @where(@!= self.quote())
        @select(chr),
    
    tup: @(vals) vals @aggr(@(x, y) x + ',' + self.space() + y),    
    words: @(words) words @aggr(@(x, y) x + self.space() + y),    
    space: @() ' ',
    quote: @() "'",
    
    junkChars: @(min, max)
        randint(min, max)
        @range(0)
        @select(@(x) self.alpha |> choice)
        @join(''),
        
    junkString: @(min, max) self.junkCharRange(min, max) |> self.string,
    
    unionAll: @(cols) 
        self.words([
            'UNION', 
            'SELECT', 
            'ALL',
            self.tup(cols)
        ]),
        
    binExp: @(lhs, op, rhs) "{0}{1}{2}".format(lhs, op, rhs),    
    add: @(lhs, rhs) self.binExp(lhs, '+', rhs),
    concat: @(lhs, rhs) 'CONCAT({0},{1})'.format(lhs, rhs),
    string: @(body) "{1}{0}{1}".format(body, self.quote()),
        
    comment: @() '#',
};