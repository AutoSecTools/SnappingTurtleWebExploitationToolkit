from('random', 'randint', 'choice');
from('BaseHTTPServer', 'HTTPServer');

class ExploitServerConfig {
    portKey = 'port',
    cookieStealerKey = 'cookieStealer',    
    alpha: CharRange.alpha(),    
    serverRepo: JsonRepository('server.json'),
    
    static nextPort: @() randint(49152, 65535),
    
    static nextName: @() 
        range(0, randint(0x4, 0x10))
        @select(@(x) ExploitServerConfig.alpha |> choice)
        @join(''),
        
    static getPort: @()
        ExploitServerConfig.getValue(
            @() ExploitServerConfig.serverRepo[ExploitServerConfig.portKey]),
        
    static getCookieStealer: @()
        ExploitServerConfig.getValue(
            @() ExploitServerConfig.serverRepo[ExploitServerConfig.cookieStealerKey]),
    
    static getValue: @(f) {
        ExploitServerConfig.ensure();        
        ret f();
    },

    static ensure: @() {
        if (ExploitServerConfig.serverRepo[ExploitServerConfig.portKey] == null) {
            ExploitServerConfig.generate();
        }
    },
      
    static generate: @() {
        ExploitServerConfig.serverRepo[ExploitServerConfig.portKey] =
            ExploitServerConfig.nextPort();
            
        ExploitServerConfig.serverRepo[ExploitServerConfig.cookieStealerKey] =
            ExploitServerConfig.nextName();
            
        ExploitServerConfig.serverRepo.write();
    },
};